<launch>
  <!--BotのURDFモデルをパラメータサーバにロードする-->
  <arg name="model" default="$(find system_core)/urdf/dual_arm_robot.xacro" />
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <!--  - if sim=false, a ip_address argument is required -->
  <arg name="sim" default="true" />
  <arg name="ip_address" default="192.168.0.1" />
  <!-- If you want to change send and recieve format of denso_robot_control, -->
  <!-- you can specify the send_format and recv_format parameters -->
  <arg name="send_format" default="0" />
  <arg name="recv_format" default="2" />
  <arg name="bcap_slave_control_cycle_msec" default="8" />
  <!-- b-CAP Slave Mode [default: 0x202] -->
  <arg name="bcap_slave_mode" default="514" />

  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find system_core)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>

  <!--空のワールドでGazeboを開始する-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="verbose" value="true" />
  </include>

  <!--GazeboでMyCobot及びCobottaを生成し，パラメータサーバからのその記述を受ける-->
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model mycobot_320_dual"
        respawn="false" output="screen" />

  <include file="$(find mycobot_320_moveit)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true" />
    <arg name="info" value="true" />
    <arg name="debug" value="false" />
  </include>

  <group unless="$(eval mode=='gazebo')">
    <include file="$(find mycobot_320_moveit
                   )/launch/mycobot_pro_control.launch" />
  </group>

  <!--コントローラをROSのパラメータサーバに読み込む-->
  <rosparam file="$(find system_core)/yaml/mycobot_moveit_controllers_dual.yaml" command="load" />
  <rosparam file="$(find system_core)/yaml/joint_state_controller.yaml" command="load" />

  <!--コントローラ作成-->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
        args="arm_a_controller arm_b_controller
	            joint_state_controller" />

  <!--robot_state_publisher:
      順運動学を計算し，tfメッセージを生成する-->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <node name="$(anon rviz)"
        pkg="rviz" type="rviz" args="-d $(find mycobot_320_moveit)/config/moveit_rviz.rviz" >
  </node>

</launch>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
    <param name="publish_frequency" type="double" value="125.0" />
    <rosparam param="source_list" subst_value = "true">[/$(arg robot_name)/joint_states]</rosparam>
  </node>

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
  <group if="$(arg sim)">
    <include file="$(find denso_robot_gazebo)/launch/denso_robot_gazebo.launch">
      <arg name="robot_name" value="$(arg robot_name)" />
    </include>
  </group>

  <group unless="$(arg sim)">
    <include file="$(find denso_robot_control)/launch/denso_robot_control.launch">
      <arg name="robot_name" value="$(arg robot_name)" />
      <arg name="ip_address" value="$(arg ip_address)" />
      <arg name="send_format" value="$(arg send_format)" />
      <arg name="recv_format" value="$(arg recv_format)" />
      <arg name="bcap_slave_control_cycle_msec" value="$(arg bcap_slave_control_cycle_msec)" />
      <arg name="bcap_slave_mode" default="$(arg bcap_slave_mode)" />
    </include>
  </group>


  <include file="$(find denso_robot_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>

  <include file="$(find denso_robot_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>

  <!-- <include file="$(find denso_robot_moveit_config)/launch/default_warehouse_db.launch" /> -->

</launch>
